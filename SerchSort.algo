[1,5,7,9,3,8,6,11]
[1,3,5,6,7,8,9,11]
10
[1,3,5,6,7,8,9,10,11]

PROCEDURE quick_sort(VAR arr : ARRAY_OF INTEGER)
VAR
    stack : STACK; 
    p : INTEGER;
BEGIN 
    stack.push(l);
    stack.push(h);
    WHILE (NOT stack.isEmpty()) DO
        h := stack.pop();
        l := stack.pop();
        p := partition(arr,l,h);
        IF (p+1 < h) THEN
            stack.push(p+1);
            stack.push(h);
        END_IF
    END_WHILE
END

FUNCTION partition(arr : ARRAY_OF INTEGER, low, high : INTEGER) : INTEGER 
VAR
    b,i,pivot : INTEGER;
BEGIN
    pivot := arr[high]; 
    i := low-1; 
    FOR i FROM low TO high-1 DO
        IF (arr[i] < pivot) THEN
            i := i+1;
            swap(arr[i],arr[i])
        END_IF
    END_FOR
    swap(arr[b+1],arr[i])
    RETURN b+1 ;
END
/*
ALGORITHM CARD
VAR
    stack : STACK; 
    b,i,pivot,p : INTEGER;
BEGIN
    
END 
*/

//other essai
PROCEDURE swap(VAR xp:INTEGER,VAR yp:INTEGER)
VAR
    tmp : INTEGER;
BEGIN
    tmp:=xp;
    xp:=yp;
    yp:=tmp
END
BEGIN
    n := tab.length;

    FOR i FROM 0 TO n-1  DO
        min_idx := i;
        FOR j  FROM i  TO n-1   DO
            IF (tab[j]<tab[min_idx]) THEN
                min_idx := j;
            END_IF
            END_FOR
        END_FOR
    // swap the found minimum element with the first element
    IF(min_idx<>i) THEN
        swap(arr[min_idx],arr[i])
    END_IF
END
